#!/usr/bin/env bash
set -euo pipefail

# Exit codes:
# 2 = usage error
# 3 = missing dependency

have_cmd() { command -v "$1" >/dev/null 2>&1; }
using_dms() { have_cmd qs && qs list --all | grep -q '/quickshell/dms/'; }

usage() {
  cat <<EOF
Usage:
  dmsctl brightness +/- [amount]
  dmsctl volume +/- [amount] | mute | micmute
  dmsctl media <next|prev|play-pause>
  dmsctl lock
  dmsctl logout
  dmsctl notepad
  dmsctl night
EOF
}

[[ $# -gt 0 ]] || {
  usage
  exit 2
}

if [[ "$(id -u)" -eq 0 ]]; then
  echo "Error: Do not run this as root" >&2
  exit 2
fi

subcommand="${1,,}"
shift

case "$subcommand" in
brightness)
  [[ $# -ge 1 ]] || {
    echo "Error: missing +/- flag" >&2
    usage
    exit 2
  }
  sign="$1"
  shift
  amount="${1:-5}"
  [[ "$amount" =~ ^[0-9]+$ ]] || {
    echo "Error: amount must be integer" >&2
    exit 2
  }

  if using_dms; then
    method=$([[ "$sign" == "+" ]] && echo increment || echo decrement)
    qs -c dms ipc call brightness "$method" "$amount" ""
  else
    have_cmd brightnessctl || {
      echo "Error: brightnessctl not found" >&2
      exit 3
    }
    brightnessctl set "${amount}%${sign}"
  fi
  ;;

volume)
  [[ $# -ge 1 ]] || {
    usage
    exit 2
  }
  case "$1" in
  + | -)
    sign="$1"
    shift
    amount="${1:-5}"
    [[ "$amount" =~ ^[0-9]+$ ]] || {
      echo "Error: amount must be integer" >&2
      exit 2
    }
    if using_dms; then
      method=$([[ "$sign" == "+" ]] && echo increment || echo decrement)
      qs -c dms ipc call audio "$method" "$amount"
    else
      have_cmd wpctl || {
        echo "Error: wpctl not found" >&2
        exit 3
      }
      wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ "${amount}%${sign}"
    fi
    ;;
  mute)
    if using_dms; then
      qs -c dms ipc call audio mute
    else
      have_cmd wpctl || {
        echo "Error: wpctl not found" >&2
        exit 3
      }
      wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    fi
    ;;
  micmute)
    if using_dms; then
      qs -c dms ipc call audio micmute
    else
      have_cmd wpctl || {
        echo "Error: wpctl not found" >&2
        exit 3
      }
      wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
    fi
    ;;
  *)
    echo "Error: invalid volume action" >&2
    usage
    exit 2
    ;;
  esac
  ;;

media)
  [[ $# -eq 1 ]] || {
    usage
    exit 2
  }
  case "$1" in
  next) if using_dms; then
    qs -c dms ipc call mpris next
  else
    have_cmd playerctl || {
      echo "Error: playerctl not found" >&2
      exit 3
    }
    playerctl next
  fi ;;
  prev) if using_dms; then
    qs -c dms ipc call mpris previous
  else
    have_cmd playerctl || {
      echo "Error: playerctl not found" >&2
      exit 3
    }
    playerctl previous
  fi ;;
  play-pause) if using_dms; then
    qs -c dms ipc call mpris playPause
  else
    have_cmd playerctl || {
      echo "Error: playerctl not found" >&2
      exit 3
    }
    playerctl play-pause
  fi ;;
  *)
    echo "Error: invalid media action" >&2
    usage
    exit 2
    ;;
  esac
  ;;

lock)
  [[ $# -eq 0 ]] || {
    echo "Error: 'lock' takes no arguments" >&2
    usage
    exit 2
  }
  if using_dms; then
    qs -c dms ipc call lock lock
  else
    pidof hyprlock >/dev/null 2>&1 || uwsm-exec hyprlock --no-fade-in
  fi
  ;;

logout)
  [[ $# -eq 0 ]] || {
    echo "Error: 'logout' takes no arguments" >&2
    usage
    exit 2
  }
  USER_NAME="${USER:?No user detected}"
  case "$XDG_CURRENT_DESKTOP" in
  Hyprland)
    pid=$(hyprctl clients -j | jq -r '.[] | select(.class=="code") | .pid' | head -n1)
    ;;
  niri)
    pid=$(niri msg --json windows | jq -r '.[] | select(.app_id=="code") | .pid' | head -n1)
    ;;
  *)
    echo "Unsupported compositor: $XDG_CURRENT_DESKTOP" >&2
    exit 1
    ;;
  esac

  if [[ -n "$pid" ]]; then
    kill "$pid" || true
  fi
  exec loginctl terminate-user "$USER_NAME"
  ;;

notepad)
  [[ $# -eq 0 ]] || {
    echo "Error: 'notepad' takes no arguments" >&2
    usage
    exit 2
  }
  if using_dms; then
    qs -c dms ipc call notepad toggle
  fi
  ;;

night)
  [[ $# -eq 0 ]] || {
    echo "Error: 'night' takes no arguments" >&2
    usage
    exit 2
  }
  if using_dms; then
    qs -c dms ipc call night toggle
  else
    have_cmd gammastep || {
      echo "Error: gammastep not found" >&2
      exit 3
    }
    if pgrep gammastep >/dev/null 2>&1; then
      pkill gammastep
    else
      gammastep -O 4500 &
    fi
  fi
  ;;
*)
  echo "Error: unknown subcommand '$subcommand'" >&2
  usage
  exit 2
  ;;
esac
