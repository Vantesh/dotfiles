#!/usr/bin/env bash
# 09_setup_dms.sh - Setup DankMaterialShell for Quickshell
#
# Clones DankMaterialShell repository, customizes matugen-worker.sh,
# removes unused scripts, and patches theme.qml to use matugen error color.
#
# Exit codes:
#   0 (success), 1 (failure)

set -euo pipefail

shopt -s nullglob globstar

readonly LIB_DIR="${CHEZMOI_SOURCE_DIR:-$(chezmoi source-path)}/.chezmoiscripts/linux/lib"

# shellcheck source=/dev/null
source "$LIB_DIR/.lib-common.sh"

readonly DMS_REPO="https://github.com/AvengeMedia/DankMaterialShell.git"
readonly DMS_DIR="$HOME/.config/quickshell/dms"
readonly SCRIPTS_DIR="$DMS_DIR/scripts"
readonly MATUGEN_WORKER="$SCRIPTS_DIR/matugen-worker.sh"
readonly THEME_QML="$DMS_DIR/Common/Theme.qml"

clone_dms() {
  if [[ -d "$DMS_DIR" ]]; then
    log SKIP "DankMaterialShell already cloned"
    return 0
  fi

  if ! mkdir -p "$HOME/.config/quickshell" 2>/dev/null; then
    log ERROR "Failed to create quickshell config directory"
    return 1
  fi

  log INFO "Cloning DankMaterialShell (this may take a moment)"
  if ! git clone --depth 1 "$DMS_REPO" "$DMS_DIR" >/dev/null 2>&1; then
    log ERROR "Failed to clone DankMaterialShell repository"
    return 1
  fi

  log INFO "Cloned DankMaterialShell"
  return 0
}

replace_matugen_worker() {
  if [[ ! -d "$SCRIPTS_DIR" ]]; then
    log ERROR "Scripts directory not found: $SCRIPTS_DIR"
    return 1
  fi

  cat >"$MATUGEN_WORKER" <<'EOF'
{{ template "dms-matugen.sh" . }}
EOF

  if ! chmod +x "$MATUGEN_WORKER" 2>/dev/null; then
    log ERROR "Failed to make matugen-worker.sh executable"
    return 1
  fi

  log INFO "Replaced matugen-worker.sh"
  return 0
}

remove_unused_scripts() {
  local files_to_remove=(
    "$SCRIPTS_DIR/qt.sh"
    "$SCRIPTS_DIR/gtk.sh"
  )

  local removed=0
  for file in "${files_to_remove[@]}"; do
    if [[ -f "$file" ]]; then
      if ! rm -f "$file" 2>/dev/null; then
        log WARN "Failed to remove: $(basename "$file")"
      else
        removed=$((removed + 1))
      fi
    fi
  done

  if [[ $removed -gt 0 ]]; then
    log INFO "Removed theming scripts"
  fi

  return 0
}

patch_theme_qml() {
  if [[ ! -f "$THEME_QML" ]]; then
    log ERROR "Theme file not found: $THEME_QML"
    return 1
  fi

  if grep -q 'getMatugenColor("error"' "$THEME_QML" 2>/dev/null; then
    return 0
  fi

  if ! sed -i 's/"error": "#F2B8B5",/"error": getMatugenColor("error", "#F2B8B5"),/' "$THEME_QML" 2>/dev/null; then
    log ERROR "Failed to patch theme.qml"
    return 1
  fi

  log INFO "Patched theme.qml"
  return 0
}

main() {
  log STEP "DankMaterialShell"

  if ! clone_dms; then
    die "Failed to clone DankMaterialShell repository"
  fi

  if ! replace_matugen_worker; then
    die "Failed to replace matugen-worker.sh"
  fi

  remove_unused_scripts

  if ! patch_theme_qml; then
    die "Failed to patch theme.qml"
  fi
}

main "$@"
