#!/usr/bin/env bash
# shellcheck disable=SC1091
source "${CHEZMOI_SOURCE_DIR:?env variable missing. Please only run this script via chezmoi}/.chezmoiscripts/linux/helpers/.00_helpers"

# =============================================================================
# Initialize Environment
# =============================================================================
common_init

# ===============================================================================
# DOH
# ===============================================================================


# ====================================================================================
# DNS OVER HTTPS
# ====================================================================================
setup_doh (){
  print_box "smslant" "DOH"
  print_step "Setting up DNS over HTTPS"

  readonly DNSCRYPT_CONFIG_FILE="/etc/dnscrypt-proxy/dnscrypt-proxy.toml"
  readonly NETWORKMANAGER_CONF="/etc/NetworkManager/conf.d/no-resolved.conf"

  install_package "dnscrypt-proxy"

  declare -A cloudflare_dns=(
    ["server_names"]="['cloudflare', 'cloudflare-ipv6']"
  )
  for key in "${!cloudflare_dns[@]}"; do
    update_config "$DNSCRYPT_CONFIG_FILE" "$key" "${cloudflare_dns[$key]}"
  done

  enable_service "dnscrypt-proxy.service" "system"
  print_info "DNS over HTTPS enabled successfully"

  if [[ ! -f "$NETWORKMANAGER_CONF" ]]; then
    write_system_config "$NETWORKMANAGER_CONF" "NetworkManager configuration to disable systemd-resolved" <<EOF
[main]
systemd-resolved=false
dns=none
EOF
  fi

  # Disable systemd-resolved if it's running
  if sudo systemctl is-active --quiet systemd-resolved; then
    print_info "Disabling systemd-resolved"
    if sudo systemctl disable --now systemd-resolved.service >/dev/null 2>&1; then
      print_info "systemd-resolved disabled successfully"
    else
      print_warning "Failed to disable systemd-resolved"
    fi
  fi

  write_system_config "/etc/resolv.conf" "DNS over HTTPS configuration" <<EOF
# Generated by dnscrypt-proxy
# DO NOT EDIT THIS FILE MANUALLY
nameserver ::1
nameserver 127.0.0.1
options edns0
EOF

  # restart NetworkManager to apply changes
  if sudo systemctl restart NetworkManager >/dev/null 2>&1; then
    print_info "NetworkManager restarted successfully"
  else
    print_warning "Failed to restart NetworkManager"
  fi
}


if systemctl is-active --quiet dnscrypt-proxy.service; then
:
else
 if confirm "Setup DNS over HTTPS ?"; then
  setup_doh
  echo ""
  print_info "You may experience no network connectivity until you reboot."
 fi
fi


# ===============================================================================
# FINALIZE
# ===============================================================================

if confirm "Setup done. Do you want to reboot now?"; then
  print_info "Rebooting system to apply changes..."
  reboot
else
  print_warning "Setup done, but you need to reboot for changes to take effect."
fi
