---
name: Security
on:
  pull_request:
    branches: ["**"]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: read

jobs:
  # codeql:
  #   name: Analyze
  #   runs-on: ubuntu-latest
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       language: ['go']
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v2
  #       with:
  #         languages: ${{ matrix.language }}
  #
  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v2
  #
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v2
  #       with:
  #         category: "/language:${{matrix.language}}"
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"
          hide-progress: false

          # To enable SARIF uploads, enable code scanning in repository settings:
          # Settings -> Code security and analysis -> Code scanning
          # Then change format back to "sarif" and uncomment the upload step
          # - name: Upload Trivy scan results to GitHub Security tab
          #   uses: github/codeql-action/upload-sarif@v3
          #   if: always()
          #   with:
          #     sarif_file: "trivy-results.sarif"
          #     category: "trivy"
